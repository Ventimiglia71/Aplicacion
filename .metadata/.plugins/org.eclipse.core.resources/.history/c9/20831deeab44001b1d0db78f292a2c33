package com.cice.aulas.controllers;

import java.util.Calendar;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.cice.aulas.entities.Aula;
import com.cice.aulas.entities.Reserva;
import com.cice.aulas.entities.Sede;
import com.cice.aulas.service.IAulasService;
import com.cice.aulas.service.IReservasService;
import com.cice.aulas.service.ISedesService;

@Controller
public class reservasController {
	@Autowired
	ISedesService sedesService;
	@Autowired
	IAulasService aulasService;
	@Autowired
	IReservasService reservasService;
	
	@GetMapping("/preReserva")
	public ModelAndView preReserva() {
		//Obtenemos el a単o en el que estamos para poner como placeholder de la variable a単o a seleccionar
		Calendar c1 = Calendar.getInstance();
		int anyoNum = c1.get(Calendar.YEAR);
		String anyo = Integer.toString(anyoNum);
		
		//Obtenemos todas las sedes para ponerlas en el desplegable para elegir una
		List<Sede> sedes = sedesService.allSedes();
		int codSede = sedes.get(0).getCod_sede();
		
		//Obtenemos todas las aulas de la primera sede de la BBDD
		List<Aula> aulasXSede = aulasService.aulasPorSede(sedes.get(0).getCod_sede()); 
		//quitar
		for (Aula aula : aulasXSede) {
			System.out.println("Aula: " + aula);
		}
		//quitar
		
		ModelAndView mav = new ModelAndView();

		mav.addObject("anyo", anyo);
		mav.addObject("sedes", sedes);
		mav.addObject("sedeElegida", codSede);
		mav.addObject("aulasXSede", aulasXSede);

		mav.setViewName("preReserva");
		return mav;
	}

	@GetMapping("/cambiaSede")
	public ModelAndView cambiaSede(@RequestParam(required = true) int codSede) {
		//Obtenemos el a単o en el que estamos para poner como placeholder de la variable a単o a seleccionar
		Calendar c1 = Calendar.getInstance();
		int anyoNum = c1.get(Calendar.YEAR);
		String anyo = Integer.toString(anyoNum);
		
		//Obtenemos todas las sedes para ponerlas en el desplegable para elegir una
		List<Sede> sedes = sedesService.allSedes();
		
		//Obtenemos todas las aulas de la sede elegida
		List<Aula> aulasXSede = aulasService.aulasPorSede(codSede);
		//quitar
		for (Aula aula : aulasXSede) {
			System.out.println("Aula: " + aula);
		}
		//quitar
		
		ModelAndView mav = new ModelAndView();

		mav.addObject("anyo", anyo);
		mav.addObject("sedes", sedes);
		mav.addObject("sedeElegida", codSede);
		mav.addObject("aulasXSede", aulasXSede);

		mav.setViewName("preReserva");
		return mav;
	}

	@GetMapping("/reserva")
	public ModelAndView reserva(@RequestParam(required = true) String anoSelec,
								@RequestParam(required = true) int sedeSelec,
								@RequestParam(required = true) int aulaSelec) {
		//Revisamos si existe el calendario para los datos solicitados por el usuario
		List<Reserva> hayDatos = reservasService.existeAnyo(Integer.parseInt(anoSelec));
		
		//Si hay datos, continuamos mostrando el calendario por pantalla, si no hay, los creamos.
		if (hayDatos.size() == 0) {
			Reserva altaReserva = new Reserva();
			for (int i = 0; i < 12; i++) {
				for (int j = 0; j < 31; j++) {
					reservasService.grabarReserva(altaReserva);
					if (i == 2 || j > 27) {
						
					}
				}
			}
		}
		
		ModelAndView mav = new ModelAndView();

		mav.setViewName("reserva");
		return mav;
	}
}
